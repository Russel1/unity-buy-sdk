#if UNITY_IPHONE
namespace <%= namespace %>.SDK.iOS {
#if !SHOPIFY_MONO_UNIT_TEST
    using UnityEngine;
    using System.Runtime.InteropServices;
    using <%= namespace %>.SDK;

    class iOSWebCheckout: IWebCheckout {
        private static iOSWebCheckoutBehaviour WebComponent;

        [DllImport ("__Internal")]
        private static extern void _StartWebCheckout(string unityDelegateObjectName, string checkoutURL);

        public void Start(string checkoutURL, CheckoutSuccessCallback success, CheckoutFailureCallback failure, CheckoutCancelCallback cancelled) {
            SetupWebCheckoutComponent(success, failure, cancelled);

            _StartWebCheckout(GlobalGameObject.GameObjectName, checkoutURL);
        }

        private static void SetupWebCheckoutComponent(CheckoutSuccessCallback success, CheckoutFailureCallback failure, 
                CheckoutCancelCallback cancelled) {

            if (WebComponent == null) {
                WebComponent = GlobalGameObject.AddComponent<iOSWebCheckoutBehaviour>();
            }
        
            WebComponent.OnSuccess = success;
            WebComponent.OnFailure = failure;
            WebComponent.OnCancelled = cancelled;
        }
    }

    class iOSWebCheckoutBehaviour: MonoBehaviour {
        internal CheckoutSuccessCallback OnSuccess;
        internal CheckoutFailureCallback OnFailure;
        internal CheckoutCancelCallback OnCancelled;

        void OnNativeMessage(string jsonMessage) {
            var message = NativeMessage.CreateFromJSON(jsonMessage);
            if (message.Content == "loadedThankYou") {
                // Do a round trip to the server to see if the purchase is solid.
                // Invoke callbacks on cart to pass to Unity
                OnSuccess();
            } else if (message.Content == "cancelled") {
                OnCancelled();
            }
        }
    }
#endif
}
#endif
